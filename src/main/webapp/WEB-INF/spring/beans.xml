<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
		
	<!-- Properties file location specific to Jetty deployments -->
	<context:property-placeholder location="file:${jetty.home}/conf/twitterfeed.properties"
    	ignore-unresolvable="true" ignore-resource-not-found="true" order="1" />
    
    <!-- Properties file location specific to Tomcat deployments -->
    <context:property-placeholder location="file:${catalina.home}/conf/twitterfeed.properties"
    	ignore-unresolvable="true" ignore-resource-not-found="true" order="2" />
    	
    <!-- Application properties, used during development. -->
	<context:property-placeholder location="classpath:override.twitterfeed.properties"
		ignore-unresolvable="true" ignore-resource-not-found="true" order="3" />
    	
    <!-- The default application properties (packaged with .war) -->
	<context:property-placeholder location="classpath:default.twitterfeed.properties"
		ignore-unresolvable="true" order="4" />
		
	<bean id="HttpClient"
		class="com.kolich.http.blocking.KolichDefaultHttpClient.KolichHttpClientFactory"
		factory-method="getNewInstanceNoProxySelector">
		<constructor-arg><value>twitter-feed (+https://github.com/markkolich/twitter-feed; username=${twitter.api.username})</value></constructor-arg>
	</bean>
	
	<bean id="HavaloClient"
		class="com.kolich.havalo.client.service.HavaloClient"
		depends-on="HttpClient">
		<constructor-arg index="0" ref="HttpClient" />
		<constructor-arg index="1"><value>${havalo.api.key}</value></constructor-arg>
		<constructor-arg index="2"><value>${havalo.api.secret}</value></constructor-arg>
		<constructor-arg index="3"><value>${havalo.api.url}</value></constructor-arg>
	</bean>
	
	<bean id="TwitterApiClient"
		class="com.kolich.twitter.TwitterApiClient"
		depends-on="HttpClient">
		<constructor-arg index="0" ref="HttpClient" />
		<constructor-arg index="1"><value>${twitter.api.key}</value></constructor-arg>
		<constructor-arg index="2"><value>${twitter.api.secret}</value></constructor-arg>
		<constructor-arg index="3"><value>${twitter.api.token}</value></constructor-arg>
		<constructor-arg index="4"><value>${twitter.api.token.secret}</value></constructor-arg>
	</bean>
   	   	
</beans>
